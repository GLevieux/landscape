---
title: "RWFC"
author: "Guillaume"
date: "03/12/2020"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(data.table)
require(data.table)
library(ggplot2)
library(magrittr)
```
## Fitness evolution
```{r fitness, echo=FALSE}
DT <- as.data.table(read.csv("fitness.csv", header = FALSE,sep=";"))
DTT <- transpose(DT[,V1:=NULL])
mat <- as.matrix(DTT)
mat <- apply(mat,2,sort, decreasing=FALSE)
image(
t(mat),
axes = FALSE,
useRaster = TRUE,
col = hcl.colors(24, "YlOrRd", rev = TRUE),
zlim=c(0,max(mat))
)
```
```{r entropy function, echo=FALSE}
show_entropy <- function(filename){
DT <- as.data.table(read.csv(filename, header = FALSE,sep=";"))
DTT <- transpose(DT[,V1:=NULL])
mat <- as.matrix(DTT)
size = dim(mat)[1]
sizeX = sqrt(size)
mat <- apply(mat,2,sort, decreasing=FALSE)
image(
t(mat),
axes = FALSE,
useRaster = TRUE,
col = hcl.colors(24, "YlOrRd", rev = TRUE),
zlim=c(0,max(mat))
);
colNum = ncol(DTT)
matSum <- matrix(DTT[, D := rowSums(.SD), .SDcols = 1:colNum]$D,nrow = sizeX,ncol = sizeX)
matSum = matSum/colNum
print(hist(matSum))
image(
t(matSum),
axes = FALSE,
useRaster = TRUE,
asp=1,
col = hcl.colors(24, "YlOrRd", rev = TRUE),
zlim=c(0,max(matSum))
);
step = round(colNum/10);
#cherche le max pour meme couleurs images
maxMatTime = 0
iprev = 1;
for(i in seq(1+step,colNum,step)){
matTime <- matrix(DTT[, D := rowSums(.SD), .SDcols = iprev:i]$D,nrow = sizeX,ncol = sizeX)
print(range(matTime))
maxMatTime = max(maxMatTime,max(matTime));
iprev = i+1
}
iprev = 1;
for(i in seq(1+step,colNum,step)){
matTime <- matrix(DTT[, D := rowSums(.SD), .SDcols = iprev:i]$D, nrow = sizeX, ncol = sizeX)
image(
t(matTime),
axes = FALSE,
useRaster = TRUE,
asp=1,
zlim=c(0,maxMatTime)
)
iprev = i+1
}
}
```
## Entropy chromosomes
```{r entropy zones, echo=TRUE}
show_entropy("entropy_zones.csv")
```
## Entropy modules
```{r entropy modules, echo=FALSE}
show_entropy("entropy_modules.csv")
```
```{r pressure, echo=FALSE}
# DT <- as.data.table(read.csv("data_moy.csv", header = FALSE,sep=";"))
# DTT <- transpose(DT[,V1:=NULL])
# #hist(DTT[[20]])
# boxplot.matrix(as.matrix(DTT))
#
#   DT <- as.data.table(read.csv("data_big.csv", header = FALSE,sep=";"))
#   DTT <- transpose(DT[,V1:=NULL])
#   mat <- as.matrix(DTT)
#   image(
#       t(mat),
#       axes = FALSE,
#       useRaster = TRUE
#   )
#
# dt.m = melt(DT)
#
#
# ggplot(dt.m, aes(variable, V1,fill=value)) + geom_tile(colour = "white")
# + scale_fill_gradient(low = "white",
#      high = "steelblue")
#
#
#
# oldpar <- par(mar = rep(0.2, 4)) # reducing plot margins
# image(
#     t(mat), # image() has some weird opinions about how your matrix will be plotted
#     axes = TRUE,
#     useRaster = TRUE,
#     col = colorRampPalette(c("white", "darkorange", "black"))(30), # our colour palette
#     breaks = c(seq(0, 3, length.out = 30), 100) # colour-to-value mapping
#
# )
```
knitr::opts_chunk$set(echo = TRUE)
library(data.table)
require(data.table)
library(ggplot2)
library(magrittr)
DT <- as.data.table(read.csv("fitness.csv", header = FALSE,sep=";"))
DTT <- transpose(DT[,V1:=NULL])
mat <- as.matrix(DTT)
mat <- apply(mat,2,sort, decreasing=FALSE)
image(
t(mat),
axes = FALSE,
useRaster = TRUE,
col = hcl.colors(24, "YlOrRd", rev = TRUE),
zlim=c(0,max(mat))
)
max(mat)
DT <- as.data.table(read.csv("fitness.csv", header = FALSE,sep=";"))
DTT <- transpose(DT[,V1:=NULL])
mat <- as.matrix(DTT)
mat <- apply(mat,2,sort, decreasing=FALSE)
image(
t(mat),
axes = FALSE,
useRaster = TRUE,
col = hcl.colors(24, "YlOrRd", rev = TRUE)
)
